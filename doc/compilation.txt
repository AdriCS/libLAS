.. _compilation:

******************************************************************************
Compilation
******************************************************************************

.. contents::
    :depth: 3
    :backlinks: top



:Author: Mateusz Loskot
:Contact: mateusz at loskot dot net
:Author: Howard Butler
:Contact: hobu.inc at gmail dot com

As of libLAS 1.6, `CMake`_ 2.8.1+ is the prescribed tool for building 
libLAS from source as well as running unit tests. `CMake`_ is a cross-platform 
build system that provides a number of benefits, and its usage ensures a 
single, up-to-date build system for all libLAS-supported operating systems 
and compiler platforms.  

Like a combination of autoconf/autotools, except that it actually works on
Windows (and works without eye-stabbing pain in general), `CMake`_ is somewhat
of a meta-building tool. It can be used to generate MSVC project files, GNU
Makefiles, NMake files for MSVC, XCode projects on Mac OS X, and Eclipse
projects (as well as many others).  This functionality allows the libLAS project 
to avoid maintaining these build options by hand and target a single configuration
and build platform.

This tutorial will describe how to build libLAS using CMake on both a 
Unix platform and a Windows platform.  


* Get the source code.  See :ref:`source` for how to obtain the latest 
  development version or visit :ref:`download` to get the latest released 
  version.

* Prepare a build directory.  CMake allows you to generate different builders
  for a project, and in this example, we are going to generate both "Unix Makefiles" 
  and "Xcode" builders for libLAS on Mac OS X.

::
    
    $ cd liblas
    $ mkdir makefiles
    

CMake with "Unix Makefiles"
..............................................................................

* Configure the basic core library for the "Unix Makefiles" target:

::

    $ cmake -G "Unix Makefiles" ../
    -- The C compiler identification is GNU
    -- The CXX compiler identification is GNU
    -- Checking whether C compiler has -isysroot
    -- Checking whether C compiler has -isysroot - yes
    -- Check for working C compiler: /usr/bin/gcc
    -- Check for working C compiler: /usr/bin/gcc -- works
    -- Detecting C compiler ABI info
    -- Detecting C compiler ABI info - done
    -- Checking whether CXX compiler has -isysroot
    -- Checking whether CXX compiler has -isysroot - yes
    -- Check for working CXX compiler: /usr/bin/c++
    -- Check for working CXX compiler: /usr/bin/c++ -- works
    -- Detecting CXX compiler ABI info
    -- Detecting CXX compiler ABI info - done
    -- Enable libLAS utilities to build - done
    -- Configuring done
    -- Generating done
    -- Build files have been written to: /Users/hobu/hg/liblas-cmake/makefiles

* Run `make`

::

    $ make
    -- Enable libLAS utilities to build - done
    -- Configuring done
    -- Generating done
    -- Build files have been written to: /Users/hobu/hg/liblas-cmake/makefiles
    Scanning dependencies of target las
    [  3%] Building CXX object src/CMakeFiles/las.dir/lasclassification.cpp.o
    ...
    [ 60%] Building CXX object src/CMakeFiles/las.dir/detail/writer/writer.cpp.o
    Linking CXX static library ../bin/Debug/liblas.a
    [ 60%] Built target las
    Scanning dependencies of target las_c
    [ 63%] Building CXX object src/CMakeFiles/las_c.dir/las_c_api.cpp.o
    Linking CXX shared library ../bin/Debug/liblas_c.dylib
    [ 63%] Built target las_c
    Scanning dependencies of target las2las
    ...
    [100%] Built target txt2las

* Run 'ccmake ../' for the `Curses`_ interface or 'cmake-gui ../' for a 
  GUI version.  

  
.. figure:: ./images/ccmake-osx-start.png
    :alt: Running CCMake in OS X

.. figure:: ./images/cmake-gui-osx-start.png
    :alt: Running cmake-gui in OS X

CMake using XCode
..............................................................................

::
    $ cd liblas
    $ mkdir xcode
    $ cd xcode/

::

    $ cmake -G "Xcode" ..
    -- The C compiler identification is GNU
    -- The CXX compiler identification is GNU
    -- Checking whether C compiler has -isysroot
    -- Checking whether C compiler has -isysroot - yes
    -- Check for working C compiler: /usr/bin/gcc
    -- Check for working C compiler: /usr/bin/gcc -- works
    -- Detecting C compiler ABI info
    -- Detecting C compiler ABI info - done
    -- Checking whether CXX compiler has -isysroot
    -- Checking whether CXX compiler has -isysroot - yes
    -- Check for working CXX compiler: /usr/bin/g++
    -- Check for working CXX compiler: /usr/bin/g++ -- works
    -- Detecting CXX compiler ABI info
    -- Detecting CXX compiler ABI info - done
    -- Enable libLAS utilities to build - done
    -- Configuring done
    -- Generating done
    -- Build files have been written to: /Users/hobu/hg/liblas-cmake/xcode



::

    $ cmake ../main
    -- The C compiler identification is GNU
    -- The CXX compiler identification is GNU
    -- Check for working C compiler: /usr/bin/gcc
    -- Check for working C compiler: /usr/bin/gcc -- works
    -- Detecting C compiler ABI info
    -- Detecting C compiler ABI info - done
    -- Check for working CXX compiler: /usr/bin/c++
    -- Check for working CXX compiler: /usr/bin/c++ -- works
    -- Detecting CXX compiler ABI info
    -- Detecting CXX compiler ABI info - done
    -- Enable libLAS utilities to build - done
    -- Configuring done
    -- Generating done
    -- Build files have been written to: /home/mloskot/dev/liblas/_hg/build

* Inspect available targets

::

    $ make help
    The following are some of the valid targets for this Makefile:
    ... all (the default if no target is provided)
    ... clean
    ... depend
    ... edit_cache
    ... install
    ... install/local
    ... install/strip
    ... list_install_components
    ... rebuild_cache
    ... las
    ... las_c
    ... las2las
    ... las2txt
    ... lasinfo
    ... lasmerge
    ... txt2las


* Build

::

    $ make




.. _`CMake`: http://www.cmake.org/
.. _`CTest`: http://cmake.org/cmake/help/ctest-2-8-docs.html
.. _`CMake 2.8.0+`: http://www.cmake.org/cmake/help/cmake-2-8-docs.html
.. _`CDash`: http://www.cdash.org/
.. _`continuous integration`: http://en.wikipedia.org/wiki/Continuous_integration
.. _`libLAS CDash`: http://my.cdash.org/index.php?project=libLAS
.. _`Curses`: http://en.wikipedia.org/wiki/Curses_%28programming_library%29